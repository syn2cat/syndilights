Open Lighting Architecture - OLA
===============================================================================

OLA consists of three parts, the daemon olad, the olad plugins and the client
library, libola.

For documentation on OLA, including examples on how to get started please see
http://www.opendmx.net/index.php/OLA


Plugins
------------------------------------------------------------------------------

Are located in ./plugins. To create a new plugin you'll need to subclass the
Plugin, Device and Port classes. See any of the current plugins for an example.


C++ Library
-------------------------------------------------------------------------------

Is located in ./ola . You'll want to create a new OlaClient and call start().
To do anything useful you'll need to subclass OlaClientObserver and implement
some of the methods.

If you have pthreads installed this library *should* be thread safe (currently
implemented with one big lock).


Libraries in Other Languages (Python)
-------------------------------------------------------------------------------

There are experimental Python libraries you can build by running configure with
--enable-python-libs. For examples see the tests directory.

The python library seems to be working well. Perl isn't supported as the
current version of SWIG doesn't support Perl directors.


Credits
-------------------------------------------------------------------------------

Thanks to the following people/organisations:

 - Wayne and Simon from Artistic Licence for providing a Net-Lynx
 - Nic from Enttec who provided a DMX USB Pro for testing.
 - West Australian Academy of Performing Arts (WAAPA) for access to a Strand
    console.
 - Shaun Jackman from Pathway, for answering my questions about the Pathport
    protocol
 - Florian from eventa.ag who donated a StageProfi and a USBDMX2
 - Hamish Dumbreck for jese.co.uk who donated a DMX-TRI
